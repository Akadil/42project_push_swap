def ft_translation_median(stack a, stack b):
    while (a.size != 3)
    {
        median = ft_find_median(a)
        for i in range(a.size):
            if num >= median:
                ft_push(a, b)
            ft_rotate(a)
    }

def find_median(stack a):
    ft_sort(a)
    med_ind = floor (a.size / 2)
    return a.nums[med_ind]

def quicksort(stack a, pos_left, pos_right):
    if pos_left >= pos_right:
        return (1)
    pivot = a[pos_left]
    pos_left += 1
    while (pos_left <= pos_right):
        if (a[l] > pivot && a[r] < pivot)
            swap()
            l ++ and r --
        else if (a[l] > pivot)
            r ++
        else if (a[r] < pivot)
            l++
        else:
            l++ and r--
    swap(pivot with a[l])
    quicksort(a, initial_left, pos_right);
    quicksort(a, pos_left, initial_right);